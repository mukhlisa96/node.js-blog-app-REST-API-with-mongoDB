{"ast":null,"code":"var _jsxFileName = \"/home/muhlisa/react-projects/node.js-blog-app-REST-API-with-mongoDB/client/src/components/singlePost/singlePost.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n    };\n    getPost();\n  }, [path]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"singlePostAuthor\",\n            children: post.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Data(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(SinglePost, \"DV4m2e4EknoTJvrZUYilLV4FL64=\", false, function () {\n  return [useLocation];\n});\n_c = SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["axios","useEffect","useState","Link","useLocation","jsxDEV","_jsxDEV","SinglePost","_s","location","path","pathname","split","post","setPost","getPost","res","get","data","className","children","photo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","username","Data","createdAt","toDateString","desc","_c","$RefreshReg$"],"sources":["/home/muhlisa/react-projects/node.js-blog-app-REST-API-with-mongoDB/client/src/components/singlePost/singlePost.jsx"],"sourcesContent":["import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport { Link, useLocation } from \"react-router-dom\"\nimport \"./singlePost.css\"\n\nexport default function SinglePost() {\n    const location = useLocation()\n    const path = location.pathname.split(\"/\")[2]\n    const [post, setPost] = useState({})\n\n    useEffect(() => {\n        const getPost = async () => {\n            const res = await axios.get(\"/posts/\" + path)\n            setPost(res.data)\n        }\n        getPost()\n    }, [path])\n\n    return (\n        <div className=\"singlePost\">\n            <div className=\"singlePostWrapper\">\n\n                {post.photo && (\n                    <img\n                        className=\"singlePostImg\"\n                        src={post.photo}\n                        alt=\"\"\n                    />\n                )}\n                <h1 className=\"singlePostTitle\">\n                    {post.title}\n                    <div className=\"singlePostEdit\">\n                        <i className=\"singlePostIcon far fa-edit\"></i>\n                        <i className=\"singlePostIcon far fa-trash-alt\"></i>\n                    </div>\n                </h1>\n                <div className=\"singlePostInfo\">\n                    <span>\n                        Author:\n                        <b className=\"singlePostAuthor\">\n                            {post.username}\n                        </b>\n                    </span>\n                    <span>{new Data(post.createdAt).toDateString()}</span>\n                </div>\n                <p className=\"singlePostDesc\">\n                    {post.desc}\n                </p>\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,IAAI,GAAGD,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,MAAMc,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,SAAS,GAAGP,IAAI,CAAC;MAC7CI,OAAO,CAACE,GAAG,CAACE,IAAI,CAAC;IACrB,CAAC;IACDH,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,oBACIJ,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAC,QAAA,eACvBd,OAAA;MAAKa,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAE7BP,IAAI,CAACQ,KAAK,iBACPf,OAAA;QACIa,SAAS,EAAC,eAAe;QACzBG,GAAG,EAAET,IAAI,CAACQ,KAAM;QAChBE,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CACJ,eACDrB,OAAA;QAAIa,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAC1BP,IAAI,CAACe,KAAK,eACXtB,OAAA;UAAKa,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3Bd,OAAA;YAAGa,SAAS,EAAC;UAA4B;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9CrB,OAAA;YAAGa,SAAS,EAAC;UAAiC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACLrB,OAAA;QAAKa,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3Bd,OAAA;UAAAc,QAAA,GAAM,SAEF,eAAAd,OAAA;YAAGa,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC1BP,IAAI,CAACgB;UAAQ;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACPrB,OAAA;UAAAc,QAAA,EAAO,IAAIU,IAAI,CAACjB,IAAI,CAACkB,SAAS,CAAC,CAACC,YAAY,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACNrB,OAAA;QAAGa,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EACxBP,IAAI,CAACoB;MAAI;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACnB,EAAA,CA9CuBD,UAAU;EAAA,QACbH,WAAW;AAAA;AAAA8B,EAAA,GADR3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}